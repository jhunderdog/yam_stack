///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class YamListResponseSort {
/*
{
  "sorted": true,
  "unsorted": false,
  "empty": false
}
*/

  bool? sorted;
  bool? unsorted;
  bool? empty;

  YamListResponseSort({
    this.sorted,
    this.unsorted,
    this.empty,
  });
  YamListResponseSort.fromJson(Map<String, dynamic> json) {
    sorted = json["sorted"];
    unsorted = json["unsorted"];
    empty = json["empty"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["sorted"] = sorted;
    data["unsorted"] = unsorted;
    data["empty"] = empty;
    return data;
  }
}

class YamListResponsePageableSort {
/*
{
  "sorted": true,
  "unsorted": false,
  "empty": false
}
*/

  bool? sorted;
  bool? unsorted;
  bool? empty;

  YamListResponsePageableSort({
    this.sorted,
    this.unsorted,
    this.empty,
  });
  YamListResponsePageableSort.fromJson(Map<String, dynamic> json) {
    sorted = json["sorted"];
    unsorted = json["unsorted"];
    empty = json["empty"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["sorted"] = sorted;
    data["unsorted"] = unsorted;
    data["empty"] = empty;
    return data;
  }
}

class YamListResponsePageable {
/*
{
  "sort": {
    "sorted": true,
    "unsorted": false,
    "empty": false
  },
  "pageNumber": 0,
  "pageSize": 10,
  "offset": 0,
  "paged": true,
  "unpaged": false
}
*/

  YamListResponsePageableSort? sort;
  int? pageNumber;
  int? pageSize;
  int? offset;
  bool? paged;
  bool? unpaged;

  YamListResponsePageable({
    this.sort,
    this.pageNumber,
    this.pageSize,
    this.offset,
    this.paged,
    this.unpaged,
  });
  YamListResponsePageable.fromJson(Map<String, dynamic> json) {
    sort = (json["sort"] != null) ? YamListResponsePageableSort.fromJson(json["sort"]) : null;
    pageNumber = json["pageNumber"]?.toInt();
    pageSize = json["pageSize"]?.toInt();
    offset = json["offset"]?.toInt();
    paged = json["paged"];
    unpaged = json["unpaged"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (sort != null) {
      data["sort"] = sort!.toJson();
    }
    data["pageNumber"] = pageNumber;
    data["pageSize"] = pageSize;
    data["offset"] = offset;
    data["paged"] = paged;
    data["unpaged"] = unpaged;
    return data;
  }
}

class YamListResponseContentTags {
/*
{
  "name": "이태원맛집"
}
*/

  String? name;

  YamListResponseContentTags({
    this.name,
  });
  YamListResponseContentTags.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    return data;
  }
}

class YamListResponseContentFoods {
/*
{
  "name": "램 케밥"
}
*/

  String? name;

  YamListResponseContentFoods({
    this.name,
  });
  YamListResponseContentFoods.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    return data;
  }
}

class YamListResponseContentRestaurant {
/*
{
  "id": 9,
  "apiId": "11520662",
  "name": "미스터케밥 이태원점",
  "addName": "서울 용산구 이태원동 127-2",
  "roadAddName": "서울 용산구 이태원로 192",
  "region1depth": "서울",
  "region2depth": "용산구",
  "region3depth": "이태원동",
  "x": "126.995356670795",
  "y": "37.5344027135795",
  "category1depth": "음식점",
  "category2depth": "양식",
  "closedCount": 0
}
*/

  int? id;
  String? apiId;
  String? name;
  String? addName;
  String? roadAddName;
  String? region1depth;
  String? region2depth;
  String? region3depth;
  String? x;
  String? y;
  String? category1depth;
  String? category2depth;
  int? closedCount;

  YamListResponseContentRestaurant({
    this.id,
    this.apiId,
    this.name,
    this.addName,
    this.roadAddName,
    this.region1depth,
    this.region2depth,
    this.region3depth,
    this.x,
    this.y,
    this.category1depth,
    this.category2depth,
    this.closedCount,
  });
  YamListResponseContentRestaurant.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    apiId = json["apiId"]?.toString();
    name = json["name"]?.toString();
    addName = json["addName"]?.toString();
    roadAddName = json["roadAddName"]?.toString();
    region1depth = json["region1depth"]?.toString();
    region2depth = json["region2depth"]?.toString();
    region3depth = json["region3depth"]?.toString();
    x = json["x"]?.toString();
    y = json["y"]?.toString();
    category1depth = json["category1depth"]?.toString();
    category2depth = json["category2depth"]?.toString();
    closedCount = json["closedCount"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["apiId"] = apiId;
    data["name"] = name;
    data["addName"] = addName;
    data["roadAddName"] = roadAddName;
    data["region1depth"] = region1depth;
    data["region2depth"] = region2depth;
    data["region3depth"] = region3depth;
    data["x"] = x;
    data["y"] = y;
    data["category1depth"] = category1depth;
    data["category2depth"] = category2depth;
    data["closedCount"] = closedCount;
    return data;
  }
}

class YamListResponseContent {
/*
{
  "id": 16,
  "genTime": "2021-07-10",
  "competeTime": null,
  "restaurant": {
    "id": 9,
    "apiId": "11520662",
    "name": "미스터케밥 이태원점",
    "addName": "서울 용산구 이태원동 127-2",
    "roadAddName": "서울 용산구 이태원로 192",
    "region1depth": "서울",
    "region2depth": "용산구",
    "region3depth": "이태원동",
    "x": "126.995356670795",
    "y": "37.5344027135795",
    "category1depth": "음식점",
    "category2depth": "양식",
    "closedCount": 0
  },
  "foods": [
    {
      "name": "램 케밥"
    }
  ],
  "tags": [
    {
      "name": "이태원맛집"
    }
  ],
  "memo": "꼭 가봐야되는 식당",
  "review": null,
  "good": true
}
*/

  int? id;
  String? genTime;
  String? competeTime;
  YamListResponseContentRestaurant? restaurant;
  List<YamListResponseContentFoods?>? foods;
  List<YamListResponseContentTags?>? tags;
  String? memo;
  String? review;
  bool? good;

  YamListResponseContent({
    this.id,
    this.genTime,
    this.competeTime,
    this.restaurant,
    this.foods,
    this.tags,
    this.memo,
    this.review,
    this.good,
  });
  YamListResponseContent.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    genTime = json["genTime"]?.toString();
    competeTime = json["competeTime"]?.toString();
    restaurant = (json["restaurant"] != null) ? YamListResponseContentRestaurant.fromJson(json["restaurant"]) : null;
    if (json["foods"] != null) {
      final v = json["foods"];
      final arr0 = <YamListResponseContentFoods>[];
      v.forEach((v) {
        arr0.add(YamListResponseContentFoods.fromJson(v));
      });
      foods = arr0;
    }
    if (json["tags"] != null) {
      final v = json["tags"];
      final arr0 = <YamListResponseContentTags>[];
      v.forEach((v) {
        arr0.add(YamListResponseContentTags.fromJson(v));
      });
      tags = arr0;
    }
    memo = json["memo"]?.toString();
    review = json["review"]?.toString();
    good = json["good"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["genTime"] = genTime;
    data["competeTime"] = competeTime;
    if (restaurant != null) {
      data["restaurant"] = restaurant!.toJson();
    }
    if (foods != null) {
      final v = foods;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["foods"] = arr0;
    }
    if (tags != null) {
      final v = tags;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["tags"] = arr0;
    }
    data["memo"] = memo;
    data["review"] = review;
    data["good"] = good;
    return data;
  }
}

class YamListResponse {
/*
{
  "content": [
    {
      "id": 16,
      "genTime": "2021-07-10",
      "competeTime": null,
      "restaurant": {
        "id": 9,
        "apiId": "11520662",
        "name": "미스터케밥 이태원점",
        "addName": "서울 용산구 이태원동 127-2",
        "roadAddName": "서울 용산구 이태원로 192",
        "region1depth": "서울",
        "region2depth": "용산구",
        "region3depth": "이태원동",
        "x": "126.995356670795",
        "y": "37.5344027135795",
        "category1depth": "음식점",
        "category2depth": "양식",
        "closedCount": 0
      },
      "foods": [
        {
          "name": "램 케밥"
        }
      ],
      "tags": [
        {
          "name": "이태원맛집"
        }
      ],
      "memo": "꼭 가봐야되는 식당",
      "review": null,
      "good": true
    }
  ],
  "pageable": {
    "sort": {
      "sorted": true,
      "unsorted": false,
      "empty": false
    },
    "pageNumber": 0,
    "pageSize": 10,
    "offset": 0,
    "paged": true,
    "unpaged": false
  },
  "last": false,
  "totalPages": 3,
  "totalElements": 27,
  "sort": {
    "sorted": true,
    "unsorted": false,
    "empty": false
  },
  "first": true,
  "numberOfElements": 10,
  "size": 10,
  "number": 0,
  "empty": false
}
*/

  List<YamListResponseContent?>? content;
  YamListResponsePageable? pageable;
  bool? last;
  int? totalPages;
  int? totalElements;
  YamListResponseSort? sort;
  bool? first;
  int? numberOfElements;
  int? size;
  int? number;
  bool? empty;

  YamListResponse({
    this.content,
    this.pageable,
    this.last,
    this.totalPages,
    this.totalElements,
    this.sort,
    this.first,
    this.numberOfElements,
    this.size,
    this.number,
    this.empty,
  });


  YamListResponse.fromJson(Map<String, dynamic> json) {
    if (json["content"] != null) {
      final v = json["content"];
      final arr0 = <YamListResponseContent>[];
      v.forEach((v) {
        arr0.add(YamListResponseContent.fromJson(v));
      });
      content = arr0;
    }
    pageable = (json["pageable"] != null) ? YamListResponsePageable.fromJson(json["pageable"]) : null;
    last = json["last"];
    totalPages = json["totalPages"]?.toInt();
    totalElements = json["totalElements"]?.toInt();
    sort = (json["sort"] != null) ? YamListResponseSort.fromJson(json["sort"]) : null;
    first = json["first"];
    numberOfElements = json["numberOfElements"]?.toInt();
    size = json["size"]?.toInt();
    number = json["number"]?.toInt();
    empty = json["empty"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (content != null) {
      final v = content;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["content"] = arr0;
    }
    if (pageable != null) {
      data["pageable"] = pageable!.toJson();
    }
    data["last"] = last;
    data["totalPages"] = totalPages;
    data["totalElements"] = totalElements;
    if (sort != null) {
      data["sort"] = sort!.toJson();
    }
    data["first"] = first;
    data["numberOfElements"] = numberOfElements;
    data["size"] = size;
    data["number"] = number;
    data["empty"] = empty;
    return data;
  }
}
